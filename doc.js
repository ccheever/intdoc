// Generated by CoffeeScript 1.6.3
(function() {
  var doc, esprima;

  esprima = require('esprima');

  doc = function(fn) {
    "Extracts the docstring and named params for a function if applicable\n\nThe docstring is determined by looking at .__doc__ and if that is \nset, using that. If that \nIn a function definition, if the first token inside the function\nbody is a string literal, then that is the docstring; if the first\ntoken is anything else, then the function is not considered to have\na docstring\n";
    var docString, first, functionBodyParseTree, params, parseTree, x;
    parseTree = esprima.parse("(" + (fn.toString()) + ")");
    params = (function() {
      var _i, _len, _ref, _results;
      _ref = parseTree.body[0].expression.params;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(x.name);
      }
      return _results;
    })();
    functionBodyParseTree = parseTree.body[0].expression.body.body;
    if (fn.__doc__ != null) {
      docString = fn.__doc__.toString();
    } else {
      docString = null;
      if (functionBodyParseTree.length) {
        first = functionBodyParseTree[0];
        if (first.type === "ExpressionStatement" && first.expression.type === "Literal") {
          docString = first.expression.value;
        }
      }
    }
    return {
      params: params,
      doc: docString,
      name: fn.name
    };
  };

  module.exports = doc;

}).call(this);
